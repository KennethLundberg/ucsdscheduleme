@model ucsdscheduleme.Models.UserScheduleViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="flex-container">
    <div class="middle">
        <div class="calendar">
            <div class="schedule">
                <div id="monday" class="schedule-group">
                    <div class="schedule-header"><span>Monday</span></div>                   
                </div>
                <div id="tuesday" class="schedule-group">
                    <div class="schedule-header"><span>Tuesday</span></div>                 
                </div>
                <div id="wednesday" class="schedule-group">
                    <div class="schedule-header"><span>Wednesday</span></div>                   
                </div>
                <div id="thursday" class="schedule-group">
                    <div class="schedule-header"><span>Thursday</span></div>
                </div>
                <div id="friday" class="schedule-group">
                    <div class="schedule-header"><span>Friday</span></div>
                </div>
            </div>
            <div class="time">
                <div><span class="time-block">7:30<span class="am-pm">am</span></span></div>
                <div><span class="time-block">8:00<span class="am-pm">am</span></span></div>
                <div><span class="time-block">8:30<span class="am-pm">am</span></span></div>
                <div><span class="time-block">9:00<span class="am-pm">am</span></span></div>
                <div><span class="time-block">9:30<span class="am-pm">am</span></span></div>
                <div><span class="time-block">10:00<span class="am-pm">am</span></span></div>
                <div><span class="time-block">10:30<span class="am-pm">am</span></span></div>
                <div><span class="time-block">11:00<span class="am-pm">am</span></span></div>
                <div><span class="time-block">11:30<span class="am-pm">am</span></span></div>
                <div><span class="time-block">12:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">12:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">1:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">1:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">2:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">2:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">3:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">3:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">4:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">4:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">5:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">5:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">6:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">6:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">7:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">7:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">8:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">8:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">9:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">9:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">10:00<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">10:30<span class="am-pm">pm</span></span></div>
                <div><span class="time-block">11:00<span class="am-pm">pm</span></span></div>
            </div>
        </div>

        <table class="bottom" id="examdata">
            <thead>
                <tr>
                    <th>Course</th>
                    <th>Type</th>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Location</th>
                </tr>
            </thead>
            <tbody id="onetime">
            </tbody>
        </table>
    </div>

    <div class="side left-bar">
        <div>
            <div id="logo">
                <span>ucsdschedule.me</span>
            </div>
        </div>

        <div class="searchbar-container">
            <div class="searchbar">
                <input type="text" id="search" placeholder="Search classes" name="q" />
                <button type="submit" value="text" class="search-icon"><i class="fa fa-search"></i></button>
                <div class="search-result" id="courseItems">
                </div>
            </div>
        </div>
        <div class="class-list" id="class-list">
            @foreach(var courseItem in Model.CourseListItems)
            {
                <div class="@((courseItem.IsCustomEvent) ? "custom class" : "class")" id="@courseItem.CourseId">
                    <span>@courseItem.CourseAbbreviation</span>
                    <div class="class-icon">
                        <i class="fa fa-window-close" aria-hidden="true"></i>
                    </div>
                </div>
            }
        </div>
        <div class="generate-schedule-container">
            <select id="optimization" style="width: 100%;">
                <option value="-1" selected="selected">Select Schedule Preference</option>
                <option value="0">Most Gaps</option>
                <option value="1">Fewest Gaps</option>
                <option value="2">Most Days</option>
                <option value="3">Fewest Days</option>
                <option value="4">Highest GPA</option>
                <option value="5">Highest Rate My Professor</option>
                <option value="6">Earliest End</option>
                <option value="7">Latest Start</option>
            </select>
            <div class="generate-schedule-button" onclick="generateSchedule()"></div>
        </div>
    </div>

    <div class="side right-bar">
        <div id="overall-stat">
            <table id="tabledata">
                <tr>
                    <td>Overall Workload</td>
                    <td id="overall-workload">0 Hr/wk</td>
                </tr>
                <tr> 
                    <td>Overall Avg. GPA Expected</td>
                    <td id="gpa-expected">F (NaN)</td>
                </tr>
                <tr>
                    <td>Overall Avg. Received</td>
                    <td id="gpa-received">F (NaN)</td>
                </tr>
            </table>
        </div>
        <div class="course-stat-container" id="course-stat-container">
        </div>
        <div class="button" onclick="visibilityOn('custom-event-form');">Add Custom Event</div>
        <div class="logout-button"></div>
    </div>
</div>

<div class="custom-event-modal" id="custom-event-form">
    <div id="custom-event-wrapper">
        <div id="custom-event-name-wrapper">
            <input type="text" maxlength="10" placeholder="Name (max 10 characters)" id="custom-event-name" />
        </div>
        <div>
            <div id="custom-event-time-wrapper">
                <input type="time" id="custom-event-starttime" min="07:30" max="23:15"/>
                <span> to </span>
                <input type="time" id="custom-event-endtime" min="7:45" max="23:30" />
            </div>
        </div>
        <div>
            <div class="custom-event-day-input">
                <input type="checkbox" id="custom-event-monday" />
                <span>Mon</span>
            </div>
            <div class="custom-event-day-input">
                <input type="checkbox" id="custom-event-tuesday" />
                <span>Tue</span>
            </div>
            <div class="custom-event-day-input">
                <input type="checkbox" id="custom-event-wednesday" />
                <span>Wed</span>
            </div>
            <div class="custom-event-day-input">
                <input type="checkbox" id="custom-event-thursday" />
                <span>Thu</span>
            </div>
            <div class="custom-event-day-input">
                <input type="checkbox" id="custom-event-friday" />
                <span>Fri</span>
            </div>
        </div>
        <div class="custom-event-button" onclick="saveCustomEvent();">Save</div>
        <div class="custom-event-button" onclick="closeCustomEvent();">Cancel</div>
    </div>
</div>

<script>
    var coursesFromModel = @Html.Raw(Json.Serialize(@Model.ScheduleViewModel.Courses));
    var courseListFromModel = @Html.Raw(Json.Serialize(@Model.CourseListItems.Select(cl => cl.CourseId)));
    var myApp = {
        constants: {
            coursePrefix: "_c",
            basePrefix: "_b",
            sectionPrefix: "_s",
            baseEventClass: "undefined"
        },
        urls: {
            generateSchedule: "@Url.Action("GenerateSchedule","Home")",
            typeAhead: "@Url.Action("TypeAhead", "Home")",
            customEvent: "@Url.Action("CreateCustomEvent", "Home")",
            removeCustomEvent: "@Url.Action("RemoveCustomEvent", "Home")",
            changeScheduleSection: "@Url.Action("ChangeScheduleSection", "Home")"
        },
        coursesToSchedule: courseListFromModel,
        courses: coursesFromModel
    };

    var isEditing = false;

    (function () {
    	var search = document.getElementById("search");
        search.addEventListener("input", typeAhead);


        var input = document.getElementById("search");
        var dropdown = document.getElementById("courseItems");


        input.addEventListener("focusin", fin);
        input.addEventListener("focusout", fout);

        dropdown.addEventListener("focusin", fin);
	    dropdown.addEventListener("focusout", fout);

	    var isHover;
        dropdown.onmouseover = function() {
            isHover = true;
	    }

	    dropdown.onmouseout = function() {
	    	isHover = false;
	    }

        function fin() {
            dropdown.style.display = "block";
        }

        function fout() {

	        if(!isHover) {
	        	dropdown.style.display = "none";
	        }
        }

	    document.addEventListener('click',function(e) {
            if (e.target) {
                if (e.target.classList.contains("courseItem")) {
                    //call addList
                    addCourse(e.target);
                } else if (e.target.classList.contains("fa-window-close")) {
                    removeCourse(e);
                }
            }

	        // clicked on a calendar event
	        var outerDiv = findOuterDiv(e.target, 'event');
	        if(e.target && outerDiv) {
	        	// currently editing AND event is activated
	        	if(isEditing && outerDiv.classList.contains('event-activated')) {
        			updateEvent(outerDiv);
        		}
	        }

	        // clicked on change button
	        if(e.target && (e.target.classList.contains('fa-cog') || e.target.classList.contains('edit-span'))) {
	        	// only allow changes if currently not editing
	        	if(!isEditing) {
	        		changeSchedule(outerDiv);
	        		isEditing = true;
	        		hideEditButtons();
	        	}
	        }

	        if(isEditing) {
	        	var activatedEvents = document.getElementsByClassName('event-activated');
	        	for(var i = 0; i < activatedEvents.length; i++) {
	        		var activatedEvent = activatedEvents.item(i);
		        	activatedEvent.addEventListener('mouseenter', function(e) {
		        		var hoverEvent = findOuterDiv(e.target, 'event');
				    	if(e.target && hoverEvent) {
				        	// currently editing AND event is activated
				        	if(isEditing && hoverEvent.classList.contains('event-activated')) {
				        		activateSelectedBasesAndSections(hoverEvent);
			        		}
				        }
				    });

				    activatedEvent.addEventListener('mouseleave', function(e) {
				    	if(e.target && findOuterDiv(e.target, 'event')) {
				        	// currently editing AND event is activated
				        	var hoverEvent = findOuterDiv(e.target, 'event');
				        	if(isEditing && hoverEvent.classList.contains('event-activated')) {
				        		reactivateAllBasesAndAllSections(hoverEvent);
			        		}
				    	}
				    });
		        }
		    }

        });
    })();
</script>